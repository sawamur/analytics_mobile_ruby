
require 'rubygems'
require 'active_support'
require 'digest/md5'
require 'cgi'
require 'net/http'

Net::HTTP.version_1_2

GIF_DATA = [0x47, 0x49, 0x46, 0x38, 0x39, 0x61,
            0x01, 0x00, 0x01, 0x00, 0x80, 0xff,
            0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
            0x00, 0x2c, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x01, 0x00, 0x00, 0x02,
            0x02, 0x44, 0x01, 0x00, 0x3b]

def get_ip(remote_address)
  return "" if remote_address.blank?
  if remote_address =~ /^((\d{1,3}\.){3})\d{1,3}$/
    $1 + "0";
  else
    "";
  end
end


# Get a random number string.
def get_random_number 
  rand(0x7fffffff).to_i
end


# Generate a visitor id for this hit.
# If there is a visitor id in the cookie, use that, otherwise
# use the guid if we have one, otherwise use a random number.
def get_visitor_id(guid,account,user_agent,cookie)
  # If there is a value in the cookie, don't change it.
  return cookie unless cookie.blank?
  
  unless guid.blank?
    # Create the visitor id using the guid.
    message = guid.to_s + account.to_s
  else
    # otherwise this is a new user, create a new random id.
    message = user_agent + get_random_number.to_s
  end
  md5_string = Digest::MD5.hexdigest(message)
  return "0x" + md5_string[0, 16];
end


def write_gif_data(cookie,utm_url)
  header_args = {
    "type" => 'image/gif',
    "cache_control" => 'private, no-cache, no-cache=Set-Cookie, proxy-revalidate',
    "pragma" => 'no-cache',
    "cookie" => cookie,
    "expires" => 1.day.ago }
  
  # If the debug parameter is on, add a header to the response that contains
  # the url that was used to contact Google Analytics.
  params = Hash.new(nil)
  
  if (params['utmdebug'])
    header_args.merge!("X_GA_MOBILE_URL" => utm_url)
  end
  #CGI.new.header(header_args) 
  GIF_DATA.pack("C35")
end



def send_request_to_google_analytics(utm_url)
  opt = {}
  if request.accept_language
    opt.merge! 'Accepts-Language' => request.accept_language
  end
  
  if request.user_agent
    opt.merge! 'User-Agent' => request.user_agent
  end

  $ga_output = $ua->get($utm_url);
  if (defined($query->param('utmdebug')) && !$ga_output->is_success) 
    print $ga_output->status_line;
  end
end

